name: Build All Tweaks
permissions:
  contents: write

on:
  push:
  workflow_dispatch:

jobs:
  discover-projects:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Discover Projects
        id: set-matrix
        run: |
          projects=$(ls -d */ | sed 's#/##' | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix=${projects}" >> "$GITHUB_OUTPUT"

  build:
    needs: discover-projects
    runs-on: macos-latest
    strategy:
      matrix:
        project: ${{ fromJson(needs.discover-projects.outputs.projects) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Set up Theos
        uses: waruhachi/theos-action@v2.1.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          theos-src: "roothide/theos"

      - name: Build Package
        shell: bash
        working-directory: ${{ matrix.project }}
        continue-on-error: true
        run: |
          set -e
          make clean package FINALPACKAGE=1
          make clean package FINALPACKAGE=1 THEOS_PACKAGE_SCHEME=rootless
          make clean package FINALPACKAGE=1 THEOS_PACKAGE_SCHEME=roothide

      - name: Save Successful Builds
        id: record-success
        if: success()
        run: echo "${{ matrix.project }}" >> successful_projects.txt

  aggregate-results:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Gather Successful Projects
        id: gather
        run: |
          if [ -f successful_projects.txt ]; then
            successful=$(cat successful_projects.txt | jq -R -s -c 'split("\n")[:-1]')
            echo "successful_projects=${successful}" >> "$GITHUB_OUTPUT"
          else
            echo "successful_projects=[]" >> "$GITHUB_OUTPUT"

  release:
    needs: aggregate-results
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create Release Notes
        id: release-notes
        run: |
          successful_projects=${{ needs.aggregate-results.outputs.successful_projects }}
          notes="Release includes the following successful projects:\n"
          for project in $(echo "${successful_projects}" | jq -r '.[]'); do
            notes="${notes}- ${project}\n"
          done
          echo "${notes}" > release_notes.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release-$(date +'%Y%m%d%H%M%S')"
          name: "Automated Release"
          body_path: release_notes.txt
          files: |
            $(echo ${{ needs.aggregate-results.outputs.successful_projects }} | jq -r '.[]' | sed -e 's/^/.\/&\/packages\/*/')
          draft: false
          prerelease: false
          make_latest: true
