name: Build All Tweaks
permissions:
  contents: write

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        project:
          - Nita
    steps:
      - uses: actions/checkout@v4

      - name: Set up Theos
        uses: waruhachi/theos-action@v2.1.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          theos-src: "roothide/theos"

      - name: Build Package
        shell: bash
        working-directory: ${{ matrix.project }}
        run: |
          make clean package FINALPACKAGE=1
          make clean package FINALPACKAGE=1 THEOS_PACKAGE_SCHEME=rootless
          make clean package FINALPACKAGE=1 THEOS_PACKAGE_SCHEME=roothide

      - name: Save Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.project }}-artifacts
          path: ${{ matrix.project }}/packages/*.deb

  release:
    needs: build
    runs-on: macos-latest
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./packages

      - name: Generate Release Notes and Compute Hashes
        id: generate-notes
        shell: bash
        run: |
          RELEASE_BODY="## Build Summary\n\n"
          for PROJECT_DIR in ./packages/*; do
              if [ -d "$PROJECT_DIR" ]; then
                  PROJECT_NAME=$(basename "$PROJECT_DIR")
                  RELEASE_BODY+="### $PROJECT_NAME\n"
                  for FILE in "$PROJECT_DIR"/*.deb; do
                      FILENAME=$(basename "$FILE")
                      ARCH=$(echo "$FILENAME" | sed -E 's/.*_iphoneos-(arm|arm64|arm64e)\.deb/\1/')
                      MD5SUM=$(md5 -q "$FILE")
                      SHA1=$(shasum -a 1 "$FILE" | awk '{ print $1 }')
                      SHA256=$(shasum -a 256 "$FILE" | awk '{ print $1 }')

                      RELEASE_BODY+="$ARCH:\n"
                      RELEASE_BODY+="  - MD5sum: $MD5SUM\n"
                      RELEASE_BODY+="  - SHA1: $SHA1\n"
                      RELEASE_BODY+="  - SHA256: $SHA256\n\n"
                  done
              fi
          done
          echo "release_body=$RELEASE_BODY" >> "$GITHUB_ENV"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0
          name: Release
          body: ${{ env.release_body }}
          files: ./packages/**/*.deb
          draft: false
          prerelease: false
          make_latest: true
